#!/usr/bin/env node

const { resolve } = require('path');
const { existsSync, statSync } = require('fs');
const meow = require('meow');
const entry = require('..');

const cli = meow(
  `
Usage
  $ tinypng <input>

Options
  -e  png,jpg,jpeg. default: png
  -o  dist
  --help, -h     show help
  --version, -v  versions

Examples
  $ tinypng images
  $ tinypng btn*.png
  $ tinypng images -o img
  $ tinypng images -e png,jpg -o img
`,
  {
    flags: {
      help: {
        type: 'boolean',
        alias: 'h',
      },
      version: {
        type: 'boolean',
        alias: 'v',
      },
    },
  },
);

if (cli.flags.v) {
  cli.showVersion();
  process.exit();
}

if (cli.flags.h || !cli.input[0]) {
  cli.showHelp();
  process.exit();
}

/** 输入文件，bash 会解析一遍 glob 得到文件数组 */
const target = cli.input;

/** 后缀 */
const exts = (cli.flags.e || 'png').split(',');

/** 输出目录 */
let dist = cli.flags.o || 'tinified';

/** 工作目录 */
let cwd = process.cwd();

/** 最终使用的 glob 数组 */
const globs = [];

// 将目录转为 glob
target.forEach((name) => {
  const stats = statSync(resolve(cwd, name));
  if (stats.isFile()) {
    globs.push(name);
  } else if (stats.isDirectory()) {
    globs.push(`${name}/**/*.@(${exts.join('|')})`);
  }
});

if (existsSync(dist)) {
  const dt = new Date();
  dt.setMinutes(dt.getMinutes() - dt.getTimezoneOffset());
  const date = dt.toISOString().slice(0, -5).replace(/\D/g, '');
  dist += `-${date}`;
}

// console.log(globs, cwd, dist);
entry(globs, cwd, dist);
